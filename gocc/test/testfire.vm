program PingPong;

{
int playerOnePoints, playerTwoPoints;
Circle ball;
Square playerOne, playerTwo;
int ballXVel, ballYVel;

bool gameOver, starting;

Text scoreOne, scoreTwo;
}
void movePlayerOne(){
    if(keyPressed(UP)){
       if(playerOne.y >= 10){
            playerOne.move(0,10);
        }
    }
    if(keyPressed(DOWN)){
        if(playerOne.y <= 440){
            playerOne.move(0,-10);
        }
    }
}

void movePlayerTwo(){
    if(keyPressed(W)){
        if(playerTwo.y >= 10){
            playerOne.move(0,10);
        }
    }
    if(keyPressed(S)){
        if(playerTwo.y <= 440){
            playerOne.move(0,-10);
        }
    }
}

void checkCollisionOne(){
    if (checkCollision(ball, playerOne) ) {
        
        bool playerBetween;
        playerBetween = (ball.x < playerOne.x)  && (ball.x < playerOne.x + playerOne.width) ;
        bool upBetweenPlayer;
        upBetweenPlayer = (ball.x + ball.width < playerOne.x)  && (ball.x + ball.width > playerOne.x + playerOne.width);               
        bool downBetweenPlayer;
        downBetweenPlayer = (ball.x > playerOne.x ) && (ball.x + ball.width < playerOne.x + playerOne.width);
        
        if(playerHit || upBetweenPlayer || downBetweenPlayer){
            if(ball.y>playerOne.y+playerOne.width/2){
                if(ballXVel > 0){
                    ballYVel = ballYVel * (-1);
                } 
            }
            else{ 
                if(ballYVel < 0){
                    ballYVel = ballYVel * (-1);
                }
            }
        }

        else{  
            int dist;
            dist = ball.y + ball.height / 2 - (player.y + player.height / 2);

            int deltaVel;
            deltaVel =  (dist / 50) * 10;

            ballYVel = ballYVel + deltaVel;

            ballXVel = ballXVel * (-1);
        }

    }
}

void checkCollisionTwo(){
    if (checkCollision(ball, playerTwo) ) {
        
        bool playerBetween;
        playerBetween = ball.x > playerTwo.x  && ball.x > playerTwo.x + playerTwo.width ;
        bool upBetweenPlayer;
        upBetweenPlayer = ball.x + ball.width > playerTwo.x  && ball.x + ball.width < playerTwo.x + playerTwo.width;               
        bool downBetweenPlayer;
        downBetweenPlayer = ball.x < playerTwo.x && ball.x + ball.width > playerTwo.x + playerTwo.width;
        
        if(playerHit || upBetweenPlayer || downBetweenPlayer){
            if(ball.y < playerTwo.y+playerTwo.width/2){
                if(ballXVel > 0){
                    ballYVel = ballYVel * (-1);
                } 
            }
            else{ 
                if(ballYVel < 0){
                    ballYVel = ballYVel * (-1);
                }
            }
        }

        else{  
            int dist;
            dist = ball.y + ball.height / 2 - (player.y + player.height / 2);

            int deltaVel;
            deltaVel =  (dist / 50) * 10;

            ballYVel = ballYVel + deltaVel;

            ballXVel = ballXVel * (-1);
        }

    }
}

void moveBall(){
    ball.move(ballXVel, ballYVel);
}

void tick(){
    movePlayerOne();
    movePlayerTwo();
    if(gameOver==false){
        if(starting){
            if(keyPressed(SPACE)){
                starting = false;
            }
        }
        else{
            checkCollisionOne();
            checkCollisionTwo();
            
            if((ball.y <= 0 || ball.y + ball.height >= 500)  && ball.x > 0 && ball.x + ball.width < 750){
                ballYVel = ballYVel * (-1);
            }

            if(ball.x + ball.width >= 750){
                playerOnePoints = playerOnePoints + 1;
                starting = true;
                playerOne.setPosition(0,225);
                playerTwo.setPosition(710,225);
                ball.setPosition(680,235);
                ballXVel = -10;
                ballYVel = -10;
                updateScore();
            }

            if(ball.x <= 0){
                playerTwoPoints = playerTwoPoints + 1;
                starting = true;
                playerOne.setPosition(0,225);
                playerTwo.setPosition(710,225);
                ball.setPosition(20,235);
                ballXVel = 10;
                ballYVel = 10;
                updateScore();
            }

            moveBall();

            if(playerOnePoints == 3){
                Text oneWins;
                oneWins.setText("PLAYER 1 WINS");
                oneWins.setColor("#ffffff");
                oneWins.setPosition(275,200);
                oneWins.setFontSize(40);
                oneWins.render();
                gameOver = true;
            }

            if(playerTwoPoints == 3){
                Text twoWins;
                twoWins.setText("PLAYER 2 WINS");
                twoWins.setColor("#ffffff");
                twoWins.setPosition(275,200);
                twoWins.setFontSize(40);
                twoWins.render();
                gameOver = true;
            }
        } 
    }

}

void updateScore(){
    if(playerOnePoints == 1){
        scoreOne.setText("1");
    }
    if(playerOnePoints == 2){
        scoreOne.setText("2");
    }
    if(playerOnePoints == 3){
        scoreOne.setText("3");
    }
    if(playerTwoPoints == 1){
        scoreTwo.setText("1");
    }
    if(playerTwoPoints == 2){
        scoreTwo.setText("2");
    }
    if(playerTwoPoints == 3){
        scoreTwo.setText("3");
    }
    scoreOne.render();
    scoreTwo.render();
}

void main(){
    
    Background bg;

    playerOnePoints = 0;
    playerTwoPoints = 0;

    gameOver = false;
    starting = true;

    ballXVel = 10;
    ballYVel = 10;

    bg.setColor("#000000");
    bg.setSize(730,500);

    ball.setSize(30,30);
    ball.setColor("#ffffff");
    ball.setPosition(20,235);

    playerOne.setColor("#ffffff");
    playerOne.setSize(20,50);
    playerOne.setPosition(0,225);
    
    playerTwo.setColor("#ffffff");
    playerTwo.setSize(20,50);
    playerTwo.setPosition(710,225);

    scoreOne.setText("0");
    scoreOne.setFontSize(30);
    scoreOne.setPosition(300, 10);
    scoreOne.render();
    scoreTwo.setText("0");
    scoreTwo.setFontSize(30);
    scoreTwo.setPosition(330, 10);
    scoreTwo.render();
    
    tick();
}
